<div xmlns:nxu="http://nuxeo.org/nxweb/util"
     xmlns:ui="http://java.sun.com/jsf/facelets"
     xmlns:f="http://java.sun.com/jsf/core"
     xmlns:h="http://java.sun.com/jsf/html"
     xmlns:a4j="http://richfaces.org/a4j"
     xmlns:c="http://java.sun.com/jstl/core"
     xmlns:nxh="http://nuxeo.org/nxweb/html"
     xmlns:nxl="http://nuxeo.org/nxforms/layout"
     xmlns:nxd="http://nuxeo.org/nxweb/document">

  <script language="javascript">
    function popupAnnotation(url) {
      popupWidth = 1000;
      popupHeight = 700;
      popupTop = (window.screen.height - popupHeight) / 2;
      popupLeft = (window.screen.width - popupWidth) / 2;
      popup = window.open(url, '_annotationPopup', 'toolbar=0, scrollbars=1, location=0, statusbar=0, menubar=0, resizable=1, dependent=1, top='+popupTop+', left='+popupLeft+', width='+popupWidth+', height='+popupHeight);
      if(!popup.opener) {
        popup.opener = window;
      }
      return false;
    }

    function focusComment() {
      document.getElementById('navigation:assetView:commentList:addComment:commentContent').focus();
    }
  </script>

  <div class="infoTabContent">
    <table>
      <tr>
        <td class="assetContainer">
          <c:if test="#{!documentActions.currentSelection.hasSchema('video') and !documentActions.currentSelection.hasSchema('audio')}">
          <a href="#" onclick="return popupAnnotation('#{annotationsActions.annotationsURL}')">

            <c:if test="#{documentActions.currentSelection.hasSchema('picture') and documentActions.currentSelection.picture.views.size > 0}">
              <c:choose>
                <c:when test="#{documentActions.currentSelection.picture.views[0].width gt documentActions.currentSelection.picture.views[0].height}">
                  <c:choose>
                    <c:when test="#{documentActions.currentSelection.picture.views[0].width gt 384}">
                      <nxh:graphicImage id="theImage"
                                  url="#{nxd:fileUrl('downloadPicture', documentActions.currentSelection, 'Medium:content', documentActions.currentSelection.dublincore.modified)}?conversationId=#{conversation.id}"
                                  title="#{messages['label.click.annotate']}"
                                  rendered="#{documentActions.currentSelection.hasSchema('picture')}"
                                  width="384" />
                    </c:when>
                    <c:otherwise>
                      <nxh:graphicImage id="theImage"
                                  url="#{nxd:fileUrl('downloadPicture', documentActions.currentSelection, 'Medium:content', documentActions.currentSelection.dublincore.modified)}?conversationId=#{conversation.id}"
                                  title="#{messages['label.click.annotate']}"
                                  rendered="#{documentActions.currentSelection.hasSchema('picture')}"
                                  width="#{documentActions.currentSelection.picture.views[0].width}" />
                    </c:otherwise>
                  </c:choose>
                </c:when>
                <c:otherwise>
                  <c:choose>
                    <c:when test="#{documentActions.currentSelection.picture.views[0].height gt 384}">
                      <nxh:graphicImage id="theImage"
                                  url="#{nxd:fileUrl('downloadPicture', documentActions.currentSelection, 'Medium:content', documentActions.currentSelection.dublincore.modified)}?conversationId=#{conversation.id}"
                                  title="#{messages['label.click.annotate']}"
                                  rendered="#{documentActions.currentSelection.hasSchema('picture')}"
                                  height="384" />
                    </c:when>
                    <c:otherwise>
                      <nxh:graphicImage id="theImage"
                                  url="#{nxd:fileUrl('downloadPicture', documentActions.currentSelection, 'Medium:content', documentActions.currentSelection.dublincore.modified)}?conversationId=#{conversation.id}"
                                  title="#{messages['label.click.annotate']}"
                                  rendered="#{documentActions.currentSelection.hasSchema('picture')}"
                                  height="#{documentActions.currentSelection.picture.views[0].height}" />
                    </c:otherwise>
                  </c:choose>
                </c:otherwise>
              </c:choose>
              </c:if>

              <nxh:graphicImage value="/icons/office_big.png"
                                title="#{messages['label.click.annotate']}"
                                 rendered="#{!documentActions.currentSelection.hasSchema('picture') and
                                          !documentActions.currentSelection.hasSchema('video') and
                                          !documentActions.currentSelection.hasSchema('audio') }"/>
            </a>
            </c:if>

          <c:if test="#{documentActions.currentSelection.hasSchema('video')}">
            <ui:include src="/incl/video/video_player.xhtml">
              <ui:param name="videoDoc" value="#{documentActions.currentSelection}" />
            </ui:include>
          </c:if>
          <c:if test="#{documentActions.currentSelection.hasSchema('audio')}">
            <object classid='clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B' codebase='http://www.apple.com/qtactivex/qtplugin.cab'>
              <param name='src' value="#{nxd:bigFileUrl(documentActions.currentSelection, 'file:content', documentActions.currentSelection.file.filename)}"/>
              <param name='autoplay' value="false"/>
              <param name='controller' value="true"/>
              <param name='loop' value="false"/>
              <param name='scale' value="aspect"/>
              <embed src="#{nxd:bigFileUrl(documentActions.currentSelection, 'file:content', documentActions.currentSelection.file.filename)}" autoplay="false"
                controller="true" loop="false" scale="aspect" bgcolor="#6F6F6F" pluginspage="http://www.apple.com/quicktime/download/">
              </embed>
            </object>
         </c:if>
       </td>
     </tr>
    </table>



    <a4j:form id="assetView">
      <div class="documentPreviewTitle">
        <h4>
          <h:outputText
                  value="#{documentActions.currentSelection.dublincore.title}" />
        </h4>
      </div>
      
      <c:if test="#{documentActions.currentSelection.hasSchema('video')}">
        <ui:include src="/incl/tabs/asset_view_panels/asset_view_video_storyboard.xhtml" />
      </c:if>

      <div class="togglePanel">
        <div class="togglePanelTitleBox">
          <h3>
            <a href="#nogo" class="unfolded" onclick="return togglePanel(this)">
              <h:outputText value="#{messages['label.header.info.main.data']}"/>
            </a>
          </h3>
          <div class="dataBlockActions">
          <span>
            <a4j:commandLink styleClass="button"
                             action="#{documentActions.updateCurrentSelection}"
                             rendered="#{documentActions.displayMode == 'edit'}"
                             reRender="assetView">
              <h:outputText value="#{messages['command.save']}"/>
            </a4j:commandLink>
          </span>
          <span>

            <a4j:commandLink styleClass="button"
                             action="#{documentActions.toggleDisplayMode}"
                             immediate="true" reRender="assetView" rendered="#{documentActions.canEditAsset()}">
              <h:outputText value="#{messages['command.cancel']}"
                            rendered="#{documentActions.displayMode == 'edit'}"/>
              <h:outputText value="#{messages['command.edit']}"
                            rendered="#{documentActions.displayMode == 'view'}"/>
            </a4j:commandLink>
          </span>
          </div>
          <div style="clear:both;"></div>
        </div>
        <div class="togglePanelBody">
          <f:subview id="viewSubView" rendered="#{documentActions.displayMode == 'view'}">
          <nxl:layout name="heading" mode="view"
                      value="#{documentActions.currentSelection}"/>
          <nxl:layout name="dam_common" mode="view"
                      value="#{documentActions.currentSelection}"/>
          <nxl:layout name="dublincore" mode="view"
                      value="#{documentActions.currentSelection}"/>
          </f:subview>
          <f:subview id="editSubView" rendered="#{documentActions.displayMode == 'edit'}">
          <nxl:layout name="heading" mode="edit"
                      value="#{documentActions.currentSelection}"/>
          <nxl:layout name="dam_common" mode="edit"
                      value="#{documentActions.currentSelection}"/>
          <nxl:layout name="dublincore" mode="edit"
                      value="#{documentActions.currentSelection}"/>
          </f:subview>

          <h:panelGrid class="dataOutput"
                       columnClasses="labelColumn, fieldColumn" columns="2">
            <h:outputText value="#{messages['label.content.size']}"/>
            <h:panelGroup>
              <h:outputText id="imgSize"
                      value="#{nxu:printFormatedFileSize(documentActions.currentSelection.picture.views[1].content.length, 'JEDEC', true)}"
                      rendered="#{!documentActions.currentSelection.hasSchema('file') and documentActions.currentSelection.hasSchema('picture') and !empty documentActions.currentSelection.picture.views}"/>
              <h:outputText
                      value="#{nxu:printFormatedFileSize(documentActions.currentSelection.file.content.length, 'JEDEC', true)}"
                      rendered="#{documentActions.currentSelection.hasSchema('file')}"/>
            </h:panelGroup>
          </h:panelGrid>
          <h:panelGrid class="dataOutput"
                       columnClasses="labelColumn, fieldColumn" columns="2"
                       rendered="#{documentActions.currentSelection.hasSchema('picture') and !empty documentActions.currentSelection.picture.views}">
            <h:outputText value="#{messages['label.content.height']}"/>
            <h:outputText id="imgHeight" value="#{documentActions.currentSelection.picture.views[1].height}"/>

            <h:outputText value="#{messages['label.content.width']}"/>
            <h:outputText id="imgWidth" value="#{documentActions.currentSelection.picture.views[1].width}"/>
          </h:panelGrid>
          <!-- Save and cancel buttons appear above comments when in edit mode -->
        <c:if test="#{documentActions.displayMode == 'edit'}">
          <div class="buttonsBar">
            <span>
             <a4j:commandLink styleClass="button"
                              action="#{documentActions.updateCurrentSelection}"
                              rendered="#{documentActions.displayMode == 'edit'}"
                              reRender="assetView">
               <h:outputText value="#{messages['command.save']}"/>
             </a4j:commandLink>
           </span>
           <span>
             <a4j:commandLink styleClass="button"
                              action="#{documentActions.toggleDisplayMode}"
                              immediate="true" reRender="assetView">
               <h:outputText value="#{messages['command.cancel']}"
                             rendered="#{documentActions.displayMode == 'edit'}"/>
             </a4j:commandLink>
           </span>
          </div>
        </c:if>
        </div>
    </div>
      
      <div class="togglePanel">
        <a4j:outputPanel id="commentPanel">
          <div class="togglePanelTitleBox">
            <h3>
              <a4j:commandLink id="commentTitlePanel"
                styleClass="#{commentActions.showCommentsArea ? 'unfolded' : 'folded'}"
                value="#{messages['label.header.info.comments']} (#{commentActions.comments.size})"
                actionListener="#{commentActions.toggleCommentsArea}"
                reRender="commentPanel" />
            </h3>
            <div class="dataBlockActions">
              <a4j:outputPanel id="commentButtonsPanel">
                <span>
                  <a4j:commandLink styleClass="button"
                    value="#{messages['command.add']}"
                    action="#{commentActions.addComment}"
                    rendered="#{commentActions.showCreateForm}"
                    reRender="commentPanel" />
                  <a4j:commandLink styleClass="button"
                    value="#{messages['command.cancel']}"
                    actionListener="#{commentActions.toggleCreateForm}"
                    rendered="#{commentActions.showCreateForm}"
                    reRender="commentPanel" />
                </span>
                <span>
                  <a4j:commandLink styleClass="button"
                    value="#{messages['command.add']}"
                    actionListener="#{commentActions.toggleCreateForm}"
                    rendered="#{!commentActions.showCreateForm}"
                    oncomplete="focusComment();"
                    reRender="commentPanel" />
                </span>
              </a4j:outputPanel>
            </div>
            <div style="clear:both;"></div>
          </div>
          <f:subview id="commentList" rendered="#{commentActions.showCommentsArea}">
            <div class="togglePanelBody">
              <f:subview id="addComment" rendered="#{commentActions.showCreateForm}">
                <ui:include src="/incl/new_comment.xhtml" />
              </f:subview>
              <ui:include src="/incl/comment_list.xhtml" />
            </div>
          </f:subview>
        </a4j:outputPanel>
      </div>

      <f:subview rendered="#{documentActions.currentSelection.hasSchema('picture')}">
        <a4j:outputPanel id="exifPanel">
          <div class="togglePanel">
            <div class="togglePanelTitleBox">
              <h3>
                <a4j:commandLink id="exifTitlePanel"
                  styleClass="#{documentActions.showExifArea ? 'unfolded' : 'folded'}"
                  value="#{messages['label.header.info.exif']}"
                  actionListener="#{documentActions.toggleExifArea}"
                  reRender="exifPanel" />
              </h3>
              <div style="clear:both;"></div>
            </div>
            <f:subview id="exifContent" rendered="#{documentActions.showExifArea}">
              <nxl:layout name="exif_info" mode="view" value="#{documentActions.currentSelection}"/>
            </f:subview>
          </div>
        </a4j:outputPanel>
      </f:subview>

      <f:subview rendered="#{documentActions.currentSelection.hasSchema('picture')}">
        <a4j:outputPanel id="iptcPanel">
          <div class="togglePanel">
            <div class="togglePanelTitleBox">
              <h3>
                <a4j:commandLink id="iptcTitlePanel"
                  styleClass="#{documentActions.showIptcArea ? 'unfolded' : 'folded'}"
                  value="#{messages['label.header.info.iptc']}"
                  actionListener="#{documentActions.toggleIptcArea}"
                  reRender="iptcPanel" />
              </h3>
              <div style="clear:both;"></div>
            </div>
            <f:subview id="iptcContent" rendered="#{documentActions.showIptcArea}">
              <nxl:layout name="iptc_info" mode="view" value="#{documentActions.currentSelection}"/>
            </f:subview>
          </div>
        </a4j:outputPanel>
      </f:subview>

    </a4j:form>
  </div>

</div>
