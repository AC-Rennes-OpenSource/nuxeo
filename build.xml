<?xml version="1.0"?>
<project name="nuxeo-dam" default="usage" basedir=".">

  <!-- Create a build.properties file from build.properties.sample
       if you wish to override the JBoss paths -->
  <property file="build.properties" />
  <property name="jboss.dir" value="/opt/jboss" />
  <property name="jboss.config" value="default" />
  <property name="mvn.opts" value="" />
  
  <property name="jetty.dir" value="/opt/jetty" />
  <property name="jetty.deploy.dir" value="${jetty.dir}/bundles" />

  <property name="javac.debug" value="true" />
  <property name="javac.deprecation" value="false" />

  <!-- Boilerplate configuration -->

  <property name="build.dir" value="${basedir}/target" />
  <property name="deploy.dir" value="${jboss.dir}/server/${jboss.config}/deploy" />
  <property name="nuxeo.war.dir" value="${deploy.dir}/nuxeo.ear/nuxeo.war" />
  <property name="seam.hotdeploy.dir" value="${nuxeo.war.dir}/WEB-INF/dev" />

  <property name="dam.distribution.root" value="nuxeo-dam-distribution" />
  <property name="dam.ear.root" value="${dam.distribution.root}/nuxeo-dam-ear" />
  <property name="dam.build.dir" value="${dam.distribution.root}/target" />
  <property name="nuxeo.ear" value="nuxeo.ear" />
  <property name="deploy.lib.dir" value="${jboss.dir}/server/${jboss.config}/lib" />
  <property name="build.lib.dir" value="lib" />

  <!-- these properties will need to be overridden at execution time -->
  <target name="set.jboss.home" unless="jboss.home">
    <property name="jboss.home" value="${jboss.dir}" />
  </target>
  <target name="set.assembly.name" unless="assembly.name">
    <property name="assembly.name" value="dam-dev" />
  </target>
  <target name="setproperties" unless="jboss.server" depends="set.jboss.home, set.assembly.name">
    <property name="assembly.ear" value="${assembly.name}" />
    <property name="jboss.server" value="${jboss.home}/server/${jboss.config}" />
    <property name="jboss.deploy" value="${jboss.server}/deploy" />
    <property name="jboss.lib" value="${jboss.server}/lib" />
    <property name="jboss.nuxeo.ear" value="${jboss.deploy}/nuxeo.ear" />
    <property name="dam.ear.build" value="${dam.ear.root}/target/${assembly.ear}" />
  </target>

  <target name="usage">
    <echo message="usage: ant [install|package|deploy|web]" />
    <echo message="ant install         => Build Nuxeo DAM components" />
    <echo message="ant package         => Package Nuxeo DAM to ${build.dir}/${nuxeo.ear}" />
    <echo message="ant deploy          => Package Nuxeo DAM and copy to ${deploy.dir}" />
    <echo message="ant web             => Copy web files to a live JBoss (${deploy.dir})" />
    <echo message="ant seam            => Copy local Seam Components describes in seam.properties to the live JBoss (${deploy.dir}) and call restApi to reload these components" />
  </target>

  <condition property="osfamily-unix">
    <os family="unix" />
  </condition>
  <condition property="osfamily-windows">
    <os family="windows" />
  </condition>

  <target name="deploy" depends="install-ear,package,copy,copy-lib" description="Build and copy to JBoss">
    <echo message="Deployed ${ant.project.name} to ${deploy.dir}" />
  </target>

  <target name="deploy-jetty" depends="install-ear,copy-jars-jetty" description="Build and copy to JBoss">
    <echo message="Deployed ${ant.project.name} to ${jetty.deploy.dir}" />
  </target>

  <target name="package" depends="setproperties,package-unix,package-windows" description="Package Nuxeo DAM" />
  <target name="package-unix" if="osfamily-unix">
    <echo message="assembly NAME ${assembly.name}" />
    <exec executable="mvn" failonerror="true">
      <arg value="clean" />
      <arg value="package" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-f" />
      <arg value="${dam.ear.root}/pom.xml" />
      <arg value="-Ddam.ear.assembly=${assembly.name}" />
      <arg value="${mvn.opts}" />
    </exec>
    <echo message="Packaged ${ant.project.name} into ${dam.ear.build}" />
  </target>
  <target name="package-windows" if="osfamily-windows">
    <exec executable="cmd" failonerror="true">
      <arg value="/c" />
      <arg value="mvn.bat" />
      <arg value="clean" />
      <arg value="package" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-f" />
      <arg value="${dam.ear.root}/pom.xml" />
      <arg value="-Ddam.ear.assembly=${assembly.name}" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>

  <target name="install-ear" depends="install-ear-unix,install-ear-windows" description="Run mvn install for Nuxeo DAM ear">
  </target>
  <target name="install-ear-unix" if="osfamily-unix">
    <exec executable="mvn" failonerror="true">
      <arg value="clean" />
      <arg value="install" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-Pnuxeo-dam-wo-distribution" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>
  <target name="install-ear-windows" if="osfamily-windows">
    <exec executable="cmd" failonerror="true">
      <arg value="/c" />
      <arg value="mvn.bat" />
      <arg value="clean" />
      <arg value="install" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="-Pnuxeo-dam-wo-distribution" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>

  <target name="install" description="Run mvn install">
    <antcall target="maven">
      <param name="mvn.lifecycle" value="install"/>
    </antcall>
  </target>

  <target name="maven" depends="maven-unix,maven-windows" description="Run mvn ${mvn.lifecycle}" />
  <target name="maven-unix" if="osfamily-unix">
    <exec executable="mvn" failonerror="true">
      <arg value="clean" />
      <arg value="${mvn.lifecycle}" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>
  <target name="maven-windows" if="osfamily-windows">
    <exec executable="cmd" failonerror="true">
      <arg value="/c" />
      <arg value="mvn.bat" />
      <arg value="clean" />
      <arg value="${mvn.lifecycle}" />
      <arg value="-Dmaven.test.skip=true" />
      <arg value="${mvn.opts}" />
    </exec>
  </target>


  <target name="web" description="Copy web files to a live JBoss">
    <copy todir="${nuxeo.war.dir}">
      <fileset dir="${basedir}/nuxeo-dam-webapp/src/main/resources/nuxeo.war/" />
    </copy>
  </target>

  <target name="rename">
    <delete dir="${build.dir}/${nuxeo.ear}" failonerror="false" />
    <move file="${build.dir}/dam.ear" tofile="${build.dir}/${nuxeo.ear}" />
  </target>

  <target name="copy-lib">
    <delete failonerror="false">
      <fileset dir="${deploy.lib.dir}/">
        <include name="nuxeo*.jar" />
      </fileset>
    </delete>
    <copy todir="${deploy.lib.dir}/" failonerror="true">
      <fileset dir="${dam.build.dir}/${build.lib.dir}/" />
    </copy>
  </target>

  <target name="copy" depends="delete-ear,copy-ear,copy-lib" description="Replace ear and copy libs to jboss" />
  <target name="delete-ear" depends="setproperties">
    <delete dir="${jboss.nuxeo.ear}" failonerror="false" />
  </target>
  <target name="copy-ear" depends="setproperties">
    <mkdir dir="${jboss.nuxeo.ear}" />
    <copy todir="${jboss.nuxeo.ear}">
      <fileset dir="${dam.ear.build}" />
    </copy>
  </target>

  <target name="copy-jars">
    <copy todir="${deploy.dir}/${nuxeo.ear}/plugins" overwrite="true" flatten="true">
      <fileset dir="${basedir}">
        <include name="*/target/*.jar" />
        <exclude name="*/target/*-sources.jar" />
      </fileset>
    </copy>
  </target>
  
  <target name="copy-jars-jetty">
    <copy todir="${jetty.deploy.dir}" overwrite="true" flatten="true">
      <fileset dir="${basedir}">
        <include name="*/target/*.jar" />
        <exclude name="*/target/*-sources.jar" />
        <exclude name="*/target/*test*.jar" />
      </fileset>
    </copy>
  </target>

  <target name="seam" depends="clean-seam-hotdeploy-dir">
    <antcall target="maven">
      <param name="mvn.lifecycle" value="clean"/>
    </antcall>
    <antcall target="maven">
      <param name="mvn.lifecycle" value="compile"/>
    </antcall>
    <echo message="Deploy Seam components in ${seam.hotdeploy.dir}"/>
    <copy todir="${seam.hotdeploy.dir}" flatten="true">
      <fileset dir="./">
        <include name="**/target/**/*.class"/>
      </fileset>
    </copy>
    <get dest="./seam_hotdeploy_result.html" src="http://127.0.0.1:8080/nuxeo/restAPI/seamReload" username="Administrator" password="Administrator"/>
  </target>

  <target name="clean-seam-hotdeploy-dir">
    <delete>
      <fileset dir="${seam.hotdeploy.dir}">
        <include name="*"/>
      </fileset>
    </delete>
  </target>

</project>
