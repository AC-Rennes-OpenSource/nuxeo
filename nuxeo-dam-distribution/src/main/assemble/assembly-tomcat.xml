<project name="nuxeo-assembly"
         default="build"
         xmlns:nx="urn:nuxeo-build"
         xmlns:artifact="urn:nuxeo-artifact">
  <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build" />
  <taskdef resource="org/nuxeo/build/artifact/antlib.xml"
           uri="urn:nuxeo-artifact" />


  <target name="init" unless="init.done">
    <tstamp />

    <condition property="no.build">
      <and>
        <or>
          <isset property="maven.profile.jboss" />
          <isset property="maven.profile.ear" />
        </or>
        <not>
          <or>
            <isset property="maven.profile.tomcat" />
            <isset property="maven.profile.all-distributions" />
          </or>
        </not>
      </and>
    </condition>

    <condition property="importer">
      <or>
          <isset property="maven.profile.all-distributions" />
          <isset property="maven.profile.http-importer" />
      </or>
    </condition>

    <property name="outdir" value="${maven.project.build.directory}" />
    <property name="stagedir" value="${outdir}/stage" />
    <property name="tomcat" value="nuxeo-dam-${maven.project.version}-tomcat" />
    <property name="tomcatdir" value="${stagedir}/${tomcat}" />
    <property name="nxserver" value="${tomcatdir}/nxserver" />
    <antcall target="expand" />
    <property name="init.done" value="true" />
  </target>

  <target name="expand" unless="no.build">
    <artifact:expand depth="3" />
  </target>

  <target name="build" depends="init,cleanstage" unless="no.build">
    <echo>Building Tomcat distribution...</echo>

    <unzip dest="${stagedir}">
      <artifact:resolveFile key="org.nuxeo.ecm.distribution:nuxeo-distribution-tomcat:${nuxeo.distribution.version}:zip"
                            classifier="nuxeo-dm" />
      <patternset>
        <exclude name="**/nxserver/bundles/nuxeo-platform-webapp-${nuxeo.distribution.version}*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-webapp-core*" />

        <exclude name="**/nxserver/bundles/nuxeo-platform-comment-web*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-ear*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-forum*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-imaging-dm*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-mail*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-notification-web*" />
        <exclude name="**/nxserver/bundles/nuxeo-opensocial*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-publish*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-spaces*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-syndication*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-tag*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-virtualnavigation*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-workflow*" />
        <exclude name="**/nxserver/bundles/nuxeo-platform-wss*" />

        <exclude name="**/nxserver/bundles/nuxeo-webengine-gadgets*" />
        <exclude name="**/nxserver/bundles/nuxeo-webengine-admin*" />
        <exclude name="**/nxserver/bundles/nuxeo-webengine-sites*" />
        <exclude name="**/nxserver/bundles/nuxeo-webengine-ui*" />
        <exclude name="**/nxserver/bundles/nuxeo-user-dashboard*" />
        <exclude name="**/nxserver/bundles/nuxeo-user-settings*" />


        <exclude name="**/nxserver/bundles/nuxeo-platform-faceted-search-dm*" />

        <!-- OpenSocial libs -->
        <exclude name="**/nxserver/lib/shindig*" />
        <exclude name="**/nxserver/lib/caja*" />

        <!-- Not needed, conflict with poi-3.5-beta6 -->
        <exclude name="**/nxserver/lib/tm-extractors*" />

        <exclude name="**/nxserver/config/nxmail-scheduler-config.xml" />
        <exclude name="**/templates/common/config/default-opensocial-config.xml" />
        <exclude name="**/templates/default/nxserver/config/opensocial.properties" />
      </patternset>
    </unzip>

    <!-- <move file="${stagedir}/nuxeo-dm-${nuxeo.distribution.version}-tomcat.zip" tofile="${tomcatdir}" /> -->
    <nx:rename from="${stagedir}/nuxeo-dm*" to="${tomcatdir}" />
    <chmod dir="${tomcatdir}/bin" perm="750" includes="*.sh,*ctl" />

    <copy todir="${nxserver}/bundles" overwrite="true">
      <artifact:set>
        <includes>
          <artifact groupId="org.nuxeo.dam*" />
          <artifact artifactId="nuxeo-platform-video-*" />
          <artifact artifactId="nuxeo-platform-audio-core" />
          <artifact artifactId="nuxeo-platform-categorization-*" />
          <artifact artifactId="nuxeo-platform-importer-core" />
        </includes>
        <excludes>
          <artifact artifactId="nuxeo-dam-importer-jaxrs" />
        </excludes>
      </artifact:set>
    </copy>
    <antcall target="third-party-libraries" />

    <antcall target="copy-resources" />

    <antcall target="set-distribution-properties">
      <param name="distribution.properties.file" value="${tomcatdir}/templates/common/config/distribution.properties" />
      <param name="org.nuxeo.distribution.name" value="dam" />
      <param name="org.nuxeo.distribution.server" value="tomcat"/>
      <param name="org.nuxeo.distribution.version" value="${maven.project.version}" />
      <param name="org.nuxeo.distribution.date" value="${DSTAMP}${TSTAMP}"/>
    </antcall>

    <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-tomcat.zip"
      basedir="${stagedir}"
      includes="${tomcat}/**" />
    <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-tomcat.zip"
      type="zip"
      classifier="tomcat"
      target="${maven.project.groupId}:${maven.project.artifactId}" />

    <antcall target="create-http-importer-distribution" />
  </target>

  <target name="set-distribution-properties">
    <echo append="false" file="${distribution.properties.file}">
## DO NOT MANUALLY EDIT THIS FILE
org.nuxeo.distribution.name=${org.nuxeo.distribution.name}
org.nuxeo.distribution.server=${org.nuxeo.distribution.server}
org.nuxeo.distribution.version=${org.nuxeo.distribution.version}
org.nuxeo.distribution.date=${org.nuxeo.distribution.date}
</echo>
  </target>

  <target name="create-http-importer-distribution" if="importer">
    <copy todir="${nxserver}/bundles" overwrite="true">
        <artifact:set>
          <includes>
            <artifact artifactId="nuxeo-platform-importer-jaxrs" />
            <artifact artifactId="nuxeo-dam-importer-jaxrs" />
          </includes>
        </artifact:set>
      </copy>

      <zip destfile="${outdir}/${maven.project.artifactId}-${maven.project.version}-tomcat-importer.zip"
           basedir="${stagedir}"
           includes="${tomcat}/**" />
      <artifact:attach file="${outdir}/${maven.project.artifactId}-${maven.project.version}-tomcat-importer.zip"
                       type="zip"
                       classifier="tomcat-importer"
                       target="${maven.project.groupId}:${maven.project.artifactId}" />
  </target>

  <target name="third-party-libraries">
    <copy todir="${nxserver}/lib" overwrite="true">
      <artifact:resolveFile key="de.schlichtherle.io:truezip" />
    </copy>

    <copy todir="${tomcatdir}/lib">
      <artifact:resolveFile key="postgresql:postgresql" />
      <artifact:resolveFile key="mysql:mysql-connector-java" />
    </copy>
  </target>

  <target name="copy-resources">
    <concat destfile="${tomcatdir}/templates/common/config/nuxeo.properties"
            append="true">
      <filelist dir="src/main/resources-tomcat/config"
                files="nuxeo.properties" />
    </concat>
    <concat destfile="${tomcatdir}/templates/common/nuxeo.defaults"
            append="true">
      <filelist dir="src/main/resources-tomcat/config"
                files="nuxeo.defaults" />
    </concat>
    <concat destfile="${tomcatdir}/bin/nuxeo.conf" append="true">
      <filelist dir="src/main/resources-tomcat/config" files="nuxeo.conf" />
    </concat>

    <copy todir="${tomcatdir}" overwrite="true">
      <filelist dir="src/main/resources-common/" files="readme.html" />
    </copy>
  </target>

  <target name="cleanstage">
    <delete dir="${stagedir}" />
  </target>

</project>

