<?xml version="1.0" encoding="UTF-8"?>
<Module>
  <ModulePrefs title="Nuxeo Extension Points" category="Nuxeo" render_inline="required" scrolling="false" author="T Delprat" directory_title="Nuxeo Extension Points" author_aboutme="nuxeo" singleton="false">
      <Require feature="opensocial-0.8" />
      <Require feature="dynamic-height" />
      <Require feature="setprefs" />
      <Require feature="settitle" />
  </ModulePrefs>
  <UserPref name="title" display_name="Title" required="false" default_value="Nuxeo Extension Points"/>

  <Content type="html">
    <![CDATA[
    <!--
    <script type="text/javascript" language="javascript" src="fetcher.js"></script>
    <link rel="stylesheet" type="text/css" href="apidocgadget.css"/>
    -->
    <style>
    .dataRow {
      background-color:white;
      padding : 4px;
    }
    .dataRowEven {
      background-color:#EEEEFF;
      padding : 4px;
    }
    .title {
      font-size:14px;
      font-weight:bold;
      padding:2px;
    }
    A {
    font-size:11px;
    float:right;
    }
    .doc {
      font-style:italic;
      background-color:#FFFFF0;
      font-size:12px;
    }
    </style>
    <h3> Nuxeo Extension Points </h3>
    <div id="serviceList">
    </div>

    <script language="javascript">

function getResourceUrl() {
  return "http://explorer.nuxeo.org/nuxeo/site/distribution/current/feedExtensionPoints";
}

var dbgResponse;

function getData() {
    var params = {};
    var headers = {};
    params[gadgets.io.RequestParameters.AUTHORIZATION] = gadgets.io.AuthorizationType.NONE;
    params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
    var now = new Date().toUTCString();
    headers["Date", now];
    headers["Expires", "Fri, 01 Jan 1990 00:00:00 GMT"];
    headers["Pragma", "no-cache"];
    headers["Cache-control"] = "no-cache, must-revalidate";
    params[gadgets.io.RequestParameters.HEADERS] = headers;
    var url = getResourceUrl();
    gadgets.io.makeRequest(url, handleJSONResponse, params);
};

function handleJSONResponse(ob, errors, rc, text) {
  dbgResponse=ob;
  var data = ob.data;
    if (data==null) {
        if (errors==0) {
            errors=1;
            getData();
        } else {
            alert("Error, no result from server : " + obj.errors);
        }
        return;
    } else {
        errors=0;
    }
    displayList(data);
}

function mkRow(dataObject, idx) {
  var html = "<div class='dataRow";
  if (idx%2) {
    html+="even";
  }
  html+="'> <span class='title'>";
  html+=dataObject.label;
  html+="</span><A  href='";
  html+=dataObject.url;
  html+="' target='explorer' > [more]</A><br/>";
  if (dataObject.desc) {
    html+=dataObject.desc;
  }
  html+="</div>";
  return html;
}

function displayList(data) {
    var htmlContent = "";
    for (var i=0; i< data.length; i++) {
        htmlContent+=mkRow(data[i], i);
    }
    _gel("serviceList").innerHTML = htmlContent + "<br/>";
    gadgets.window.adjustHeight();
}

gadgets.util.registerOnLoadHandler(getData);

    </script>
     ]]>
  </Content>
</Module>